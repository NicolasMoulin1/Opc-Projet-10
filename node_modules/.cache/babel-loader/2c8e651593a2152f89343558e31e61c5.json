{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/Opc-Projet-10/src/containers/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1); // Filtrer les événements par type\n\n  const filteredByType = type ? data === null || data === void 0 ? void 0 : data.events.filter(event => event.type === type) : data === null || data === void 0 ? void 0 : data.events; // Pagination\n\n  const paginatedEvents = (filteredByType || []).slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE);\n\n  const changeType = evtType => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  const pageNumber = Math.ceil(((filteredByType === null || filteredByType === void 0 ? void 0 : filteredByType.length) || 0) / PER_PAGE);\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type)); // Pour vérifier que les événements sont bien filtrés\n\n  console.log('Type sélectionné:', type);\n  console.log('Événements filtrés:', filteredByType);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), data === null ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => value ? changeType(value) : changeType(type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: paginatedEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"53abh5PcW2g/+k4RjTRJmUZKMtw=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/nicolas/Documents/Opc-Projet-10/src/containers/Events/index.js"],"names":["useState","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredByType","events","filter","event","paginatedEvents","slice","changeType","evtType","pageNumber","Math","ceil","length","typeList","Set","map","console","log","Array","from","value","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBN,OAAO,EAA/B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C,CAHsB,CAKtB;;AACA,QAAMc,cAAc,GAAGJ,IAAI,GACvBF,IADuB,aACvBA,IADuB,uBACvBA,IAAI,CAAEO,MAAN,CAAaC,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAA9C,CADuB,GAEvBF,IAFuB,aAEvBA,IAFuB,uBAEvBA,IAAI,CAAEO,MAFV,CANsB,CAUtB;;AACA,QAAMG,eAAe,GAAG,CACtBJ,cAAc,IAAI,EADI,EAEtBK,KAFsB,CAEhB,CAACP,WAAW,GAAG,CAAf,IAAoBN,QAFJ,EAEcM,WAAW,GAAGN,QAF5B,CAAxB;;AAIA,QAAMc,UAAU,GAAIC,OAAD,IAAa;AAC9BR,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAF,IAAAA,OAAO,CAACU,OAAD,CAAP;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAC,CAAAV,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEW,MAAhB,KAA0B,CAA3B,IAAgCnB,QAA1C,CAAnB;AACA,QAAMoB,QAAQ,GAAG,IAAIC,GAAJ,CAAQnB,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEO,MAAN,CAAaa,GAAb,CAAkBX,KAAD,IAAWA,KAAK,CAACP,IAAlC,CAAR,CAAjB,CArBsB,CAuBtB;;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCpB,IAAjC;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmChB,cAAnC;AAEA,sBACE;AAAA,eACGL,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGD,IAAI,KAAK,IAAT,GACC,SADD,gBAGC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEuB,KAAK,CAACC,IAAN,CAAWN,QAAX,CADb;AAEE,QAAA,QAAQ,EAAGO,KAAD,IAAYA,KAAK,GAAGb,UAAU,CAACa,KAAD,CAAb,GAAuBb,UAAU,CAACV,IAAD;AAF9D;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,eAA3B;AAAA,kBACGQ,eAAe,CAACU,GAAhB,CAAqBX,KAAD,iBACnB,QAAC,KAAD;AAAsB,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA,oBACG;AAAA,gBAAC;AAAEiB,cAAAA;AAAF,aAAD;AAAA,gCACC,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAD5B;AAEE,cAAA,QAAQ,EAAEjB,KAAK,CAACkB,KAFlB;AAGE,cAAA,KAAK,EAAElB,KAAK,CAACmB,KAHf;AAIE,cAAA,IAAI,EAAE,IAAIC,IAAJ,CAASpB,KAAK,CAACqB,IAAf,CAJR;AAKE,cAAA,KAAK,EAAErB,KAAK,CAACP;AALf;AAAA;AAAA;AAAA;AAAA,oBADD;AAAA;AADH,WAAYO,KAAK,CAACsB,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACG,CAAC,GAAGR,KAAK,CAACT,UAAD,CAAT,EAAuBM,GAAvB,CAA2B,CAACY,CAAD,EAAIC,CAAJ;AAAA;AAC1B;AACA;AAAW,UAAA,IAAI,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAM5B,cAAc,CAAC4B,CAAC,GAAG,CAAL,CAAvD;AAAA,oBACGA,CAAC,GAAG;AADP,WAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,gBAFD;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBALJ;AAAA,kBADF;AAuCD,CAlED;;GAAMlC,S;UACoBJ,O;;;KADpBI,S;AAoEN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\n\nimport \"./style.css\";\n\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  const { data, error } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Filtrer les événements par type\n  const filteredByType = type\n    ? data?.events.filter((event) => event.type === type)\n    : data?.events;\n\n  // Pagination\n  const paginatedEvents = (\n    filteredByType || []\n  ).slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE);\n\n  const changeType = (evtType) => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  const pageNumber = Math.ceil((filteredByType?.length || 0) / PER_PAGE);\n  const typeList = new Set(data?.events.map((event) => event.type));\n\n  // Pour vérifier que les événements sont bien filtrés\n  console.log('Type sélectionné:', type);\n  console.log('Événements filtrés:', filteredByType);\n\n  return (\n    <>\n      {error && <div>An error occurred</div>}\n      {data === null ? (\n        \"loading\"\n      ) : (\n        <>\n          <h3 className=\"SelectTitle\">Catégories</h3>\n          <Select\n            selection={Array.from(typeList)}\n            onChange={(value) => (value ? changeType(value) : changeType(type))}\n          />\n          <div id=\"events\" className=\"ListContainer\">\n            {paginatedEvents.map((event) => (\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\n                {({ setIsOpened }) => (\n                  <EventCard\n                    onClick={() => setIsOpened(true)}\n                    imageSrc={event.cover}\n                    title={event.title}\n                    date={new Date(event.date)}\n                    label={event.type}\n                  />\n                )}\n              </Modal>\n            ))}\n          </div>\n          <div className=\"Pagination\">\n            {[...Array(pageNumber)].map((_, n) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\n                {n + 1}\n              </a>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}