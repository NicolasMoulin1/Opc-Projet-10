{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/Opc-Projet-10/src/contexts/DataContext/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const api = {\n  loadData: async () => {\n    const json = await fetch(\"/events.json\");\n    return json.json();\n  }\n};\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const [last, setLast] = useState(null); //modifier\n\n  const getData = useCallback(async () => {\n    try {\n      const loadData = await api.loadData();\n      setData(loadData);\n      setLast(loadData.events[loadData.envents.lenght]);\n    } catch (err) {\n      setError(err);\n    }\n  }, []);\n  useEffect(() => {\n    if (data) return;\n    getData();\n  });\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    value: {\n      data,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"dd4EFWvvGRgfj15kTs7wY84irrI=\");\n\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useData = () => {\n  _s2();\n\n  return useContext(DataContext);\n};\n\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/home/nicolas/Documents/Opc-Projet-10/src/contexts/DataContext/index.js"],"names":["PropTypes","createContext","useCallback","useContext","useEffect","useState","DataContext","api","loadData","json","fetch","DataProvider","children","error","setError","data","setData","last","setLast","getData","events","envents","lenght","err","propTypes","node","isRequired","useData"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;;AAQA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMM,GAAG,GAAG;AACjBC,EAAAA,QAAQ,EAAE,YAAY;AACpB,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAxB;AACA,WAAOD,IAAI,CAACA,IAAL,EAAP;AACD;AAJgB,CAAZ;AAOP,OAAO,MAAME,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC,CAH4C,CAGL;;AACvC,QAAMc,OAAO,GAAGjB,WAAW,CAAC,YAAY;AACtC,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMD,GAAG,CAACC,QAAJ,EAAvB;AACAQ,MAAAA,OAAO,CAACR,QAAD,CAAP;AACAU,MAAAA,OAAO,CAACV,QAAQ,CAACY,MAAT,CAAgBZ,QAAQ,CAACa,OAAT,CAAiBC,MAAjC,CAAD,CAAP;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZT,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACD;AACF,GAR0B,EAQxB,EARwB,CAA3B;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAJ,EAAU;AACVI,IAAAA,OAAO;AACR,GAHQ,CAAT;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE;AACA,IAAA,KAAK,EAAE;AACLJ,MAAAA,IADK;AAELF,MAAAA;AAFK,KAFT;AAAA,cAOGD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BM;;GAAMD,Y;;KAAAA,Y;AA+BbA,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,QAAQ,EAAEZ,SAAS,CAACyB,IAAV,CAAeC;AADF,CAAzB;AAIA,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAhB;;IAAMqB,O;;AAEb,eAAerB,WAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nconst DataContext = createContext({});\n\nexport const api = {\n  loadData: async () => {\n    const json = await fetch(\"/events.json\");\n    return json.json();\n  },\n};\n\nexport const DataProvider = ({ children }) => {\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const [last, setLast] = useState(null);//modifier\n  const getData = useCallback(async () => {\n    try {\n      const loadData = await api.loadData()\n      setData(loadData);\n      setLast(loadData.events[loadData.envents.lenght])\n    } catch (err) {\n      setError(err);\n    }\n  }, []);\n  useEffect(() => {\n    if (data) return;\n    getData();\n  });\n  \n  return (\n    <DataContext.Provider\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\n      value={{\n        data,\n        error,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport const useData = () => useContext(DataContext);\n\nexport default DataContext;\n"]},"metadata":{},"sourceType":"module"}