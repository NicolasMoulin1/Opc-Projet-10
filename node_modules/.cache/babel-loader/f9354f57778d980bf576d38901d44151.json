{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/Opc-Projet-10/src/containers/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredEvents, setFilteredEvents] = useState([]); // Utilisation de useEffect pour mettre à jour filteredEvents lorsque type ou data change\n\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.events) {\n      const events = (!type ? data.events : data.events.filter(event => event.type === type)) || [];\n      setFilteredEvents(events);\n    }\n  }, [type, data]); // Découpe des événements pour la pagination\n\n  const currentEvents = filteredEvents.slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE);\n\n  const changeType = evtType => {\n    setCurrentPage(1);\n    setType(evtType);\n  }; // Calcul du nombre de pages basé sur filteredEvents\n\n\n  const pageNumber = Math.ceil(filteredEvents.length / PER_PAGE);\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), !data ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => value ? changeType(value) : changeType(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: currentEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber).keys()].map(n =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"VOc+m9Z4WfoDUm8I9tHtRvO262o=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/nicolas/Documents/Opc-Projet-10/src/containers/Events/index.js"],"names":["useState","useEffect","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","setFilteredEvents","events","filter","event","currentEvents","slice","changeType","evtType","pageNumber","Math","ceil","length","typeList","Set","map","Array","from","value","setIsOpened","cover","title","Date","date","id","keys","n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBN,OAAO,EAA/B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD,CAJsB,CAMtB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEQ,MAAV,EAAkB;AAChB,YAAMA,MAAM,GAAG,CAAC,CAACN,IAAD,GACZF,IAAI,CAACQ,MADO,GAEZR,IAAI,CAACQ,MAAL,CAAYC,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACR,IAAN,KAAeA,IAA7C,CAFW,KAE4C,EAF3D;AAGAK,MAAAA,iBAAiB,CAACC,MAAD,CAAjB;AACD;AACF,GAPQ,EAON,CAACN,IAAD,EAAOF,IAAP,CAPM,CAAT,CAPsB,CAgBtB;;AACA,QAAMW,aAAa,GAAGL,cAAc,CAACM,KAAf,CACpB,CAACR,WAAW,GAAG,CAAf,IAAoBN,QADA,EAEpBM,WAAW,GAAGN,QAFM,CAAtB;;AAKA,QAAMe,UAAU,GAAIC,OAAD,IAAa;AAC9BT,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAF,IAAAA,OAAO,CAACW,OAAD,CAAP;AACD,GAHD,CAtBsB,CA2BtB;;;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUX,cAAc,CAACY,MAAf,GAAwBpB,QAAlC,CAAnB;AAEA,QAAMqB,QAAQ,GAAG,IAAIC,GAAJ,CAAQpB,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEQ,MAAN,CAAaa,GAAb,CAAkBX,KAAD,IAAWA,KAAK,CAACR,IAAlC,CAAR,CAAjB;AAEA,sBACE;AAAA,eACGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEG,CAACD,IAAD,GACC,SADD,gBAGC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEsB,KAAK,CAACC,IAAN,CAAWJ,QAAX,CADb;AAEE,QAAA,QAAQ,EAAGK,KAAD,IAAYA,KAAK,GAAGX,UAAU,CAACW,KAAD,CAAb,GAAuBX,UAAU,CAAC,IAAD;AAF9D;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,eAA3B;AAAA,kBACGF,aAAa,CAACU,GAAd,CAAmBX,KAAD,iBACjB,QAAC,KAAD;AAAsB,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA,oBACG;AAAA,gBAAC;AAAEe,cAAAA;AAAF,aAAD;AAAA,gCACC,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAD5B;AAEE,cAAA,QAAQ,EAAEf,KAAK,CAACgB,KAFlB;AAGE,cAAA,KAAK,EAAEhB,KAAK,CAACiB,KAHf;AAIE,cAAA,IAAI,EAAE,IAAIC,IAAJ,CAASlB,KAAK,CAACmB,IAAf,CAJR;AAKE,cAAA,KAAK,EAAEnB,KAAK,CAACR;AALf;AAAA;AAAA;AAAA;AAAA,oBADD;AAAA;AADH,WAAYQ,KAAK,CAACoB,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACG,CAAC,GAAGR,KAAK,CAACP,UAAD,CAAL,CAAkBgB,IAAlB,EAAJ,EAA8BV,GAA9B,CAAmCW,CAAD;AAAA;AACjC;AACA;AAAW,UAAA,IAAI,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAM3B,cAAc,CAAC2B,CAAC,GAAG,CAAL,CAAvD;AAAA,oBACGA,CAAC,GAAG;AADP,WAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,gBAFD;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBALJ;AAAA,kBADF;AAuCD,CAvED;;GAAMjC,S;UACoBJ,O;;;KADpBI,S;AAyEN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\n\nimport \"./style.css\";\n\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  const { data, error } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n\n  // Utilisation de useEffect pour mettre à jour filteredEvents lorsque type ou data change\n  useEffect(() => {\n    if (data?.events) {\n      const events = (!type\n        ? data.events\n        : data.events.filter((event) => event.type === type)) || [];\n      setFilteredEvents(events);\n    }\n  }, [type, data]);\n\n  // Découpe des événements pour la pagination\n  const currentEvents = filteredEvents.slice(\n    (currentPage - 1) * PER_PAGE,\n    currentPage * PER_PAGE\n  );\n\n  const changeType = (evtType) => {\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  // Calcul du nombre de pages basé sur filteredEvents\n  const pageNumber = Math.ceil(filteredEvents.length / PER_PAGE);\n\n  const typeList = new Set(data?.events.map((event) => event.type));\n\n  return (\n    <>\n      {error && <div>An error occurred</div>}\n      {!data ? (\n        \"loading\"\n      ) : (\n        <>\n          <h3 className=\"SelectTitle\">Catégories</h3>\n          <Select\n            selection={Array.from(typeList)}\n            onChange={(value) => (value ? changeType(value) : changeType(null))}\n          />\n          <div id=\"events\" className=\"ListContainer\">\n            {currentEvents.map((event) => (\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\n                {({ setIsOpened }) => (\n                  <EventCard\n                    onClick={() => setIsOpened(true)}\n                    imageSrc={event.cover}\n                    title={event.title}\n                    date={new Date(event.date)}\n                    label={event.type}\n                  />\n                )}\n              </Modal>\n            ))}\n          </div>\n          <div className=\"Pagination\">\n            {[...Array(pageNumber).keys()].map((n) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\n                {n + 1}\n              </a>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}